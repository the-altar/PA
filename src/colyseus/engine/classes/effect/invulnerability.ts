import { iEffect } from "../../interfaces"
import { Effect } from "./effect"
import { Types, BuffTypes } from "../../enums"
import { Character } from "../character";
import { Arena } from "../../arena";


export class Invulnerability extends Effect {
    private invulnerabilityType: Types

    constructor(data: iEffect, caster: number) {
        super(data, caster)
        this.invulnerabilityType = data.invulnerabilityType
    }

    public functionality(char: Character, skillType?:Array<any>) {
        char.setBuff({
            buffType:BuffTypes.Invulnerability,
            skillType: this.invulnerabilityType
        })
    }

    public execute(targets: Array<Character>, world: Arena, skillType: Array<string>): boolean {
        return this.effectTargetApplication(skillType, targets, world)
    }
}